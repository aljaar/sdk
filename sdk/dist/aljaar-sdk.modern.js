import{v4 as e}from"uuid";import a from"mitt";import t from"joi";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},r.apply(this,arguments)}const i=a(),o=async e=>{const a=await e();return a.error&&i.emit("aljaar:on:error",a.error),a},s=/^(^\+62|62|^08)(\d{3,4}-?){2}\d{3,4}$/;function n({supabase:a}){const n={auth_state:null,session:null,user:null},{data:{publicUrl:l}}=a.storage.from("avatars").getPublicUrl("public/avatar.default.webp");return i.on("aljaar:on:error",e=>{console.info(e.message)}),a.auth.onAuthStateChange((e,a)=>{console.log({event:e,session:a}),n.auth_state=e,a?(n.session=a,n.user=a.user):(n.session=null,n.user=null),i.emit("aljaar:on:auth",{event:e,session:a})}),{emitter:i,auth:{async user(){const{data:{user:e}}=await a.auth.getUser(),{data:t}=await a.from("profiles").select().eq("user_id",e.id).single();return e.profile=t,n.user=e,e},signInWith({type:e,credential:t={}}){switch(e){case"google":case"facebook":case"github":return o(()=>a.auth.signInWithOAuth({provider:e}));case"email":return o(()=>a.auth.signInWithPassword({email:t.email,password:t.password}))}},async signUp(e){const{value:r,error:i}=await o(()=>(e=>t.object({full_name:t.string().required(),email:t.string().email({minDomainSegments:2,tlds:{allow:["com","net"]}}).required(),password:t.string().min(8).alphanum().required(),phone:t.string().regex(s).required()}).validate(e))(e));return i?{data:null,error:i}:o(()=>a.auth.signUp({email:r.email,password:r.password,options:{data:{full_name:r.full_name,avatar_url:l,phone:r.phone}}}))},signOut:()=>o(()=>a.auth.signOut()),resetPassword:e=>o(()=>a.auth.resetPasswordForEmail(e,{redirectTo:"http://localhost:3000/"})),updateLocation:()=>new Promise(e=>{navigator.geolocation||e({data:null,error:{message:"Can't get user current location"}}),navigator.geolocation.getCurrentPosition(t=>{const{error:r}=o(()=>a.from("profiles").update({location:`SRID=4326;POINT(${t.coords.latitude} ${t.coords.longitude})`}).eq("user_id",n.user.id));e({data:t.coords,error:r})},()=>{},{maximumAge:6e4,timeout:5e3,enableHighAccuracy:!0})})},user:{me(){},update(e){},async getNeighborCount(){const{data:e,error:t}=await a.rpc("get_neighbor_count",{radius:200});console.log(e,t)},async getNeighborProducts(){const{data:e,error:t}=await a.rpc("get_neighbor_products",{radius:200});console.log(e,t)}},product:{async detail(e){const{data:t}=await o(()=>a.from("products").select("*, product_tags!inner ( tags (id, name) )")).eq("id",e),i=t.map(e=>{const t=e.product_tags;return delete e.product_tags,r({},e,{images:e.images.map(e=>a.storage.from("products").getPublicUrl(e)).map(e=>e.data.publicUrl),tags:t.map(({tags:{id:e,name:a}})=>({id:e,name:a}))})});return i},async all(){const{data:e}=await o(()=>{var e;return a.from("products").select("*, product_images ( image ), product_tags!inner ( tags (id, name) )").eq("user_id",null==(e=n.user)?void 0:e.id)});return e.map(e=>{const t=e.product_tags,i=e.product_images;return delete e.product_tags,delete e.product_images,r({},e,{images:i.map(({image:e})=>a.storage.from("products").getPublicUrl(e)).map(e=>e.data.publicUrl),tags:t.map(({tags:{id:e,name:a}})=>({id:e,name:a}))})})},async create({data:i,images:s}){const l=s.map(async t=>{const r=t.name.split(".").pop(),i=`${e()}.${r}`,{data:s}=await o(()=>a.storage.from("products").upload(`${n.user.id}/${i}`,t));return s}),d=(await Promise.all(l)).map(e=>e.path),[u,c]=i.drop_point,p=r({},i,{images:d}),{value:g,error:m}=await o(()=>(e=>t.object().keys({title:t.string().min(8).label("Title").required(),description:t.string().label("Description").required(),category:t.string().valid("food","non-food").label("Category").required(),tags:t.array().items(t.number()).min(1).label("Tags").required(),drop_point:t.array().items(t.number()).label("Pick Up Point").required(),drop_time:t.array().items(t.string()).label("Pick Up Time").required(),images:t.array().items(t.string()).min(1).label("Images").required(),used_since:t.when("category",{is:t.string().valid("non-food").required(),then:t.string().label("Used Since").required()}),expired_at:t.when("category",{is:t.string().valid("food").required(),then:t.date().iso().label("Expired Date").required()})}).validate(e))(p));return m?{data:null,error:m}:(g.drop_point=`SRID=4326;POINT(${u} ${c})`,o(()=>a.rpc("create_product",{product_raw:JSON.stringify(g),images:d,drop_time:i.drop_time})))},async update(e,{data:i}){const{value:s,error:n}=await o(()=>(e=>t.object().keys({title:t.string().min(8).label("Title").optional(),description:t.string().label("Description").optional(),category:t.string().valid("food","non-food").label("Category").optional(),tags:t.array().items(t.number()).label("Tags").optional(),drop_point:t.array().items(t.number()).label("Pick Up Point").optional(),drop_time:t.array().items(t.string()).label("Pick Up Time").optional(),images:t.array().items(t.string()).label("Images").optional(),used_since:t.when("category",{is:t.string().valid("non-food").required(),then:t.string().label("Used Since").optional()}),expired_at:t.when("category",{is:t.string().valid("food").required(),then:t.date().iso().label("Expired Date").optional()})}).validate(e))(r({},i)));if(n)return{data:null,error:n};const{tags:l}=s;delete s.tags;const d=await Promise.all([o(()=>a.rpc("add_product_tag",{p_id:e,tags:l})),o(()=>a.from("products").update(r({},s)).eq("id",e))]);return{id:e,product:s,update:d}},delete:async e=>o(()=>a.rpc("delete_product",{p_id:e}))},lists:{},tags:{all:()=>o(()=>a.from("tags").select("id, name").limit(8)),search:async e=>o(()=>a.from("tags").select("id, name").limit(8).ilike("name",`%${e}%`))}}}export{n as default};
//# sourceMappingURL=aljaar-sdk.modern.js.map
